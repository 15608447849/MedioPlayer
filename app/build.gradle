apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

//
buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath 'me.tatarka:gradle-retrolambda:3.2.5'
    }
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
    }
}
//

// Required because retrolambda is on maven central
repositories {
    mavenCentral()
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.3"
    aaptOptions.cruncherEnabled = false
    aaptOptions.useNewCruncher = false
//    aaptOptions {
//        cruncherEnabled = false
//        useNewCruncher = false
//     }
    defaultConfig {
        applicationId "com.wos.play.rootdir"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 1
        versionName "1.0"
        ndk {
            moduleName "serverHelper"         //生成的so名字
            ldLibs "log"
            abiFilters "armeabi-v7a"//, "x86", "armeabi"  //输出指定三种abi体系结构下的so库。
        }
    }
    sourceSets {
        main {
            manifest.srcFile 'src/main/AndroidManifest.xml'
            java.srcDirs = ['src/main/java'] //Java代码
            res.srcDirs = ['src/main/res']  //资源文件
            jniLibs.srcDirs = ['src/main/jniLibs'] //so库
//            aidl.srcDirs = ['src/main/aidl'] //aidl文件
//            renderscript.srcDirs = ['src/mian/']

        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //java 版本
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

//    //编译jni
//   task nativeLibsToJar(type: Zip, description: "#[create a jar archive of the native libs]") {
//        destinationDir file("$projectDir/libs") //目的地
//        baseName "Native_Libs" //基础名字
//        extension "jar" //扩展
//        from fileTree(dir: "libs/armeabi-v7a", include: "**/*.so") //从..来
//        into "lib" //信息
//    }
//    tasks.withType(JavaCompile) {
//        compileTask -> compileTask.dependsOn(nativeLibsToJar)
//    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:23.4.0'
    compile 'com.android.support:design:23.4.0'
    compile 'io.reactivex:rxjava:1.2.1'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:converter-scalars:2.1.0'
    compile 'com.google.code.gson:gson:2.6.2'
    compile 'cn.trinea.android.common:trinea-android-common:4.2.15'
    compile files('libs/commons-cli-1.1.jar')
    compile files('libs/xUtils-2.6.10.jar')
    compile files('libs/httpmime-4.2.1.jar')
    compile files('libs/httpcore-4.2.1.jar')
    compile files('libs/httpclient-4.2.1.jar')
    compile files('libs/commons-net-3.1.jar')
    compile files('libs/commons-io-1.2.jar')
    compile 'joda-time:joda-time:2.9.5'
    compile files('libs/pinyin4j-2.5.0.jar')
//     compile 'com.charonchui.vitamio:vitamio:4.2.2'
//    compile project(':vitamio')
}
